import { Order, Orderbook, OrderbookPayload, OrderSubmission } from "@xmr-bch-swap/swap/dist/src/orderbook";
import { Asset } from "@xmr-bch-swap/swap/dist/src/StateMachine/stateMachine";
import { PeerId } from "@libp2p/interface";
import { useCallback, useEffect, useState } from "react";
import { Observable } from "@/utils/Observable";
import { useObservable } from "@/hooks/useObservable";
import { useSwapManagerContext } from "@/providers/SwapManagerProvider";

export function ObservableView ({} : {}) {
  const manager = useSwapManagerContext();
  const [count, setCount] = useState(0);
  console.log(111 ,manager)
  // const observed = useObservable(manager);

  const update = useCallback(() => {
    // manager?.testAddSwap(0);
    // setCount(count + 1);
    // console.log(manager?.swaps);
  }, [manager, count]);
  return <div>
    {/* { JSON.stringify(manager?.swaps) } */}
    Test
    <button onClick={update}>update</button>
  </div>
}


// export function ObservableView ({} : {}) {
//   const instance = new Observable();
//   const observed = useObservable(instance);
//   console.log(1);

//   const update = useCallback(() => {
//     observed!.sideEffect();
//     console.log(observed!.value);
//   }, []);
//   return <div>
//     { observed!.value }
//     Test
//     <button onClick={update}>update</button>
//   </div>
// }
